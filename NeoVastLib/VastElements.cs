//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable FieldCanBeMadeReadOnly.Local
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMember.Global
namespace NeoVastLib
{
    using System;

    public sealed partial class AdElement : VElement
    {
        public AdElement() : base("Ad")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Ad", this.validationFailureMessage);
            }
        }

        public AdElement(object content) : base("Ad", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Ad", this.validationFailureMessage);
            }
        }

        public AdElement(params object[] content) : base("Ad", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Ad", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AdParametersElement : VElement
    {
        public AdParametersElement() : base("AdParameters")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdParameters", this.validationFailureMessage);
            }
        }

        public AdParametersElement(object content) : base("AdParameters", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdParameters", this.validationFailureMessage);
            }
        }

        public AdParametersElement(params object[] content) : base("AdParameters", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdParameters", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AdServingIdElement : VElement
    {
        public AdServingIdElement() : base("AdServingId")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdServingId", this.validationFailureMessage);
            }
        }

        public AdServingIdElement(object content) : base("AdServingId", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdServingId", this.validationFailureMessage);
            }
        }

        public AdServingIdElement(params object[] content) : base("AdServingId", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdServingId", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AdSystemElement : VElement
    {
        public AdSystemElement() : base("AdSystem")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdSystem", this.validationFailureMessage);
            }
        }

        public AdSystemElement(object content) : base("AdSystem", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdSystem", this.validationFailureMessage);
            }
        }

        public AdSystemElement(params object[] content) : base("AdSystem", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdSystem", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AdTitleElement : VElement
    {
        public AdTitleElement() : base("AdTitle")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdTitle", this.validationFailureMessage);
            }
        }

        public AdTitleElement(object content) : base("AdTitle", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdTitle", this.validationFailureMessage);
            }
        }

        public AdTitleElement(params object[] content) : base("AdTitle", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdTitle", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AdVerificationsElement : VElement
    {
        public AdVerificationsElement() : base("AdVerifications")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdVerifications", this.validationFailureMessage);
            }
        }

        public AdVerificationsElement(object content) : base("AdVerifications", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdVerifications", this.validationFailureMessage);
            }
        }

        public AdVerificationsElement(params object[] content) : base("AdVerifications", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AdVerifications", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AdvertiserElement : VElement
    {
        public AdvertiserElement() : base("Advertiser")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Advertiser", this.validationFailureMessage);
            }
        }

        public AdvertiserElement(object content) : base("Advertiser", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Advertiser", this.validationFailureMessage);
            }
        }

        public AdvertiserElement(params object[] content) : base("Advertiser", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Advertiser", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class AltTextElement : VElement
    {
        public AltTextElement() : base("AltText")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AltText", this.validationFailureMessage);
            }
        }

        public AltTextElement(object content) : base("AltText", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AltText", this.validationFailureMessage);
            }
        }

        public AltTextElement(params object[] content) : base("AltText", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("AltText", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class BlockedAdCategoriesElement : VElement
    {
        public BlockedAdCategoriesElement() : base("BlockedAdCategories")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("BlockedAdCategories", this.validationFailureMessage);
            }
        }

        public BlockedAdCategoriesElement(object content) : base("BlockedAdCategories", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("BlockedAdCategories", this.validationFailureMessage);
            }
        }

        public BlockedAdCategoriesElement(params object[] content) : base("BlockedAdCategories", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("BlockedAdCategories", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CategoryElement : VElement
    {
        public CategoryElement() : base("Category")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Category", this.validationFailureMessage);
            }
        }

        public CategoryElement(object content) : base("Category", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Category", this.validationFailureMessage);
            }
        }

        public CategoryElement(params object[] content) : base("Category", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Category", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ClickThroughElement : VElement
    {
        public ClickThroughElement() : base("ClickThrough")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClickThrough", this.validationFailureMessage);
            }
        }

        public ClickThroughElement(object content) : base("ClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClickThrough", this.validationFailureMessage);
            }
        }

        public ClickThroughElement(params object[] content) : base("ClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClickThrough", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ClickTrackingElement : VElement
    {
        public ClickTrackingElement() : base("ClickTracking")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClickTracking", this.validationFailureMessage);
            }
        }

        public ClickTrackingElement(object content) : base("ClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClickTracking", this.validationFailureMessage);
            }
        }

        public ClickTrackingElement(params object[] content) : base("ClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClickTracking", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ClosedCaptionFileElement : VElement
    {
        public ClosedCaptionFileElement() : base("ClosedCaptionFile")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClosedCaptionFile", this.validationFailureMessage);
            }
        }

        public ClosedCaptionFileElement(object content) : base("ClosedCaptionFile", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClosedCaptionFile", this.validationFailureMessage);
            }
        }

        public ClosedCaptionFileElement(params object[] content) : base("ClosedCaptionFile", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClosedCaptionFile", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ClosedCaptionFilesElement : VElement
    {
        public ClosedCaptionFilesElement() : base("ClosedCaptionFiles")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClosedCaptionFiles", this.validationFailureMessage);
            }
        }

        public ClosedCaptionFilesElement(object content) : base("ClosedCaptionFiles", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClosedCaptionFiles", this.validationFailureMessage);
            }
        }

        public ClosedCaptionFilesElement(params object[] content) : base("ClosedCaptionFiles", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ClosedCaptionFiles", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CompanionElement : VElement
    {
        public CompanionElement() : base("Companion")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Companion", this.validationFailureMessage);
            }
        }

        public CompanionElement(object content) : base("Companion", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Companion", this.validationFailureMessage);
            }
        }

        public CompanionElement(params object[] content) : base("Companion", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Companion", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CompanionAdsElement : VElement
    {
        public CompanionAdsElement() : base("CompanionAds")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionAds", this.validationFailureMessage);
            }
        }

        public CompanionAdsElement(object content) : base("CompanionAds", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionAds", this.validationFailureMessage);
            }
        }

        public CompanionAdsElement(params object[] content) : base("CompanionAds", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionAds", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CompanionClickThroughElement : VElement
    {
        public CompanionClickThroughElement() : base("CompanionClickThrough")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionClickThrough", this.validationFailureMessage);
            }
        }

        public CompanionClickThroughElement(object content) : base("CompanionClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionClickThrough", this.validationFailureMessage);
            }
        }

        public CompanionClickThroughElement(params object[] content) : base("CompanionClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionClickThrough", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CompanionClickTrackingElement : VElement
    {
        public CompanionClickTrackingElement() : base("CompanionClickTracking")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionClickTracking", this.validationFailureMessage);
            }
        }

        public CompanionClickTrackingElement(object content) : base("CompanionClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionClickTracking", this.validationFailureMessage);
            }
        }

        public CompanionClickTrackingElement(params object[] content) : base("CompanionClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CompanionClickTracking", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CreativeElement : VElement
    {
        public CreativeElement() : base("Creative")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Creative", this.validationFailureMessage);
            }
        }

        public CreativeElement(object content) : base("Creative", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Creative", this.validationFailureMessage);
            }
        }

        public CreativeElement(params object[] content) : base("Creative", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Creative", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CreativeExtensionElement : VElement
    {
        public CreativeExtensionElement() : base("CreativeExtension")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CreativeExtension", this.validationFailureMessage);
            }
        }

        public CreativeExtensionElement(object content) : base("CreativeExtension", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CreativeExtension", this.validationFailureMessage);
            }
        }

        public CreativeExtensionElement(params object[] content) : base("CreativeExtension", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CreativeExtension", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CreativeExtensionsElement : VElement
    {
        public CreativeExtensionsElement() : base("CreativeExtensions")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CreativeExtensions", this.validationFailureMessage);
            }
        }

        public CreativeExtensionsElement(object content) : base("CreativeExtensions", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CreativeExtensions", this.validationFailureMessage);
            }
        }

        public CreativeExtensionsElement(params object[] content) : base("CreativeExtensions", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CreativeExtensions", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CreativesElement : VElement
    {
        public CreativesElement() : base("Creatives")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Creatives", this.validationFailureMessage);
            }
        }

        public CreativesElement(object content) : base("Creatives", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Creatives", this.validationFailureMessage);
            }
        }

        public CreativesElement(params object[] content) : base("Creatives", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Creatives", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class CustomClickElement : VElement
    {
        public CustomClickElement() : base("CustomClick")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CustomClick", this.validationFailureMessage);
            }
        }

        public CustomClickElement(object content) : base("CustomClick", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CustomClick", this.validationFailureMessage);
            }
        }

        public CustomClickElement(params object[] content) : base("CustomClick", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("CustomClick", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class DescriptionElement : VElement
    {
        public DescriptionElement() : base("Description")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Description", this.validationFailureMessage);
            }
        }

        public DescriptionElement(object content) : base("Description", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Description", this.validationFailureMessage);
            }
        }

        public DescriptionElement(params object[] content) : base("Description", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Description", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class DurationElement : VElement
    {
        public DurationElement() : base("Duration")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Duration", this.validationFailureMessage);
            }
        }

        public DurationElement(object content) : base("Duration", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Duration", this.validationFailureMessage);
            }
        }

        public DurationElement(params object[] content) : base("Duration", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Duration", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ErrorElement : VElement
    {
        public ErrorElement() : base("Error")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Error", this.validationFailureMessage);
            }
        }

        public ErrorElement(object content) : base("Error", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Error", this.validationFailureMessage);
            }
        }

        public ErrorElement(params object[] content) : base("Error", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Error", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ExecutableResourceElement : VElement
    {
        public ExecutableResourceElement() : base("ExecutableResource")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ExecutableResource", this.validationFailureMessage);
            }
        }

        public ExecutableResourceElement(object content) : base("ExecutableResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ExecutableResource", this.validationFailureMessage);
            }
        }

        public ExecutableResourceElement(params object[] content) : base("ExecutableResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ExecutableResource", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ExpiresElement : VElement
    {
        public ExpiresElement() : base("Expires")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Expires", this.validationFailureMessage);
            }
        }

        public ExpiresElement(object content) : base("Expires", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Expires", this.validationFailureMessage);
            }
        }

        public ExpiresElement(params object[] content) : base("Expires", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Expires", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ExtensionElement : VElement
    {
        public ExtensionElement() : base("Extension")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Extension", this.validationFailureMessage);
            }
        }

        public ExtensionElement(object content) : base("Extension", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Extension", this.validationFailureMessage);
            }
        }

        public ExtensionElement(params object[] content) : base("Extension", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Extension", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ExtensionsElement : VElement
    {
        public ExtensionsElement() : base("Extensions")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Extensions", this.validationFailureMessage);
            }
        }

        public ExtensionsElement(object content) : base("Extensions", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Extensions", this.validationFailureMessage);
            }
        }

        public ExtensionsElement(params object[] content) : base("Extensions", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Extensions", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class HtmlResourceElement : VElement
    {
        public HtmlResourceElement() : base("HTMLResource")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("HTMLResource", this.validationFailureMessage);
            }
        }

        public HtmlResourceElement(object content) : base("HTMLResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("HTMLResource", this.validationFailureMessage);
            }
        }

        public HtmlResourceElement(params object[] content) : base("HTMLResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("HTMLResource", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IconElement : VElement
    {
        public IconElement() : base("Icon")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Icon", this.validationFailureMessage);
            }
        }

        public IconElement(object content) : base("Icon", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Icon", this.validationFailureMessage);
            }
        }

        public IconElement(params object[] content) : base("Icon", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Icon", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IconClicksElement : VElement
    {
        public IconClicksElement() : base("IconClicks")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClicks", this.validationFailureMessage);
            }
        }

        public IconClicksElement(object content) : base("IconClicks", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClicks", this.validationFailureMessage);
            }
        }

        public IconClicksElement(params object[] content) : base("IconClicks", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClicks", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IconClickThroughElement : VElement
    {
        public IconClickThroughElement() : base("IconClickThrough")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClickThrough", this.validationFailureMessage);
            }
        }

        public IconClickThroughElement(object content) : base("IconClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClickThrough", this.validationFailureMessage);
            }
        }

        public IconClickThroughElement(params object[] content) : base("IconClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClickThrough", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IconClickTrackingElement : VElement
    {
        public IconClickTrackingElement() : base("IconClickTracking")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClickTracking", this.validationFailureMessage);
            }
        }

        public IconClickTrackingElement(object content) : base("IconClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClickTracking", this.validationFailureMessage);
            }
        }

        public IconClickTrackingElement(params object[] content) : base("IconClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconClickTracking", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IconsElement : VElement
    {
        public IconsElement() : base("Icons")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Icons", this.validationFailureMessage);
            }
        }

        public IconsElement(object content) : base("Icons", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Icons", this.validationFailureMessage);
            }
        }

        public IconsElement(params object[] content) : base("Icons", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Icons", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IconViewTrackingElement : VElement
    {
        public IconViewTrackingElement() : base("IconViewTracking")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconViewTracking", this.validationFailureMessage);
            }
        }

        public IconViewTrackingElement(object content) : base("IconViewTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconViewTracking", this.validationFailureMessage);
            }
        }

        public IconViewTrackingElement(params object[] content) : base("IconViewTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IconViewTracking", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class IFrameResourceElement : VElement
    {
        public IFrameResourceElement() : base("IFrameResource")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IFrameResource", this.validationFailureMessage);
            }
        }

        public IFrameResourceElement(object content) : base("IFrameResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IFrameResource", this.validationFailureMessage);
            }
        }

        public IFrameResourceElement(params object[] content) : base("IFrameResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("IFrameResource", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ImpressionElement : VElement
    {
        public ImpressionElement() : base("Impression")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Impression", this.validationFailureMessage);
            }
        }

        public ImpressionElement(object content) : base("Impression", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Impression", this.validationFailureMessage);
            }
        }

        public ImpressionElement(params object[] content) : base("Impression", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Impression", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class InLineElement : VElement
    {
        public InLineElement() : base("InLine")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("InLine", this.validationFailureMessage);
            }
        }

        public InLineElement(object content) : base("InLine", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("InLine", this.validationFailureMessage);
            }
        }

        public InLineElement(params object[] content) : base("InLine", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("InLine", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class InteractiveCreativeFileElement : VElement
    {
        public InteractiveCreativeFileElement() : base("InteractiveCreativeFile")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("InteractiveCreativeFile", this.validationFailureMessage);
            }
        }

        public InteractiveCreativeFileElement(object content) : base("InteractiveCreativeFile", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("InteractiveCreativeFile", this.validationFailureMessage);
            }
        }

        public InteractiveCreativeFileElement(params object[] content) : base("InteractiveCreativeFile", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("InteractiveCreativeFile", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class JavaScriptResourceElement : VElement
    {
        public JavaScriptResourceElement() : base("JavaScriptResource")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("JavaScriptResource", this.validationFailureMessage);
            }
        }

        public JavaScriptResourceElement(object content) : base("JavaScriptResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("JavaScriptResource", this.validationFailureMessage);
            }
        }

        public JavaScriptResourceElement(params object[] content) : base("JavaScriptResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("JavaScriptResource", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class LinearElement : VElement
    {
        public LinearElement() : base("Linear")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Linear", this.validationFailureMessage);
            }
        }

        public LinearElement(object content) : base("Linear", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Linear", this.validationFailureMessage);
            }
        }

        public LinearElement(params object[] content) : base("Linear", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Linear", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class MediaFileElement : VElement
    {
        public MediaFileElement() : base("MediaFile")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("MediaFile", this.validationFailureMessage);
            }
        }

        public MediaFileElement(object content) : base("MediaFile", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("MediaFile", this.validationFailureMessage);
            }
        }

        public MediaFileElement(params object[] content) : base("MediaFile", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("MediaFile", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class MediaFilesElement : VElement
    {
        public MediaFilesElement() : base("MediaFiles")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("MediaFiles", this.validationFailureMessage);
            }
        }

        public MediaFilesElement(object content) : base("MediaFiles", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("MediaFiles", this.validationFailureMessage);
            }
        }

        public MediaFilesElement(params object[] content) : base("MediaFiles", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("MediaFiles", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class MezzanineElement : VElement
    {
        public MezzanineElement() : base("Mezzanine")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Mezzanine", this.validationFailureMessage);
            }
        }

        public MezzanineElement(object content) : base("Mezzanine", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Mezzanine", this.validationFailureMessage);
            }
        }

        public MezzanineElement(params object[] content) : base("Mezzanine", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Mezzanine", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class NonLinearElement : VElement
    {
        public NonLinearElement() : base("NonLinear")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinear", this.validationFailureMessage);
            }
        }

        public NonLinearElement(object content) : base("NonLinear", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinear", this.validationFailureMessage);
            }
        }

        public NonLinearElement(params object[] content) : base("NonLinear", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinear", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class NonLinearAdsElement : VElement
    {
        public NonLinearAdsElement() : base("NonLinearAds")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearAds", this.validationFailureMessage);
            }
        }

        public NonLinearAdsElement(object content) : base("NonLinearAds", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearAds", this.validationFailureMessage);
            }
        }

        public NonLinearAdsElement(params object[] content) : base("NonLinearAds", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearAds", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class NonLinearClickThroughElement : VElement
    {
        public NonLinearClickThroughElement() : base("NonLinearClickThrough")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearClickThrough", this.validationFailureMessage);
            }
        }

        public NonLinearClickThroughElement(object content) : base("NonLinearClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearClickThrough", this.validationFailureMessage);
            }
        }

        public NonLinearClickThroughElement(params object[] content) : base("NonLinearClickThrough", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearClickThrough", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class NonLinearClickTrackingElement : VElement
    {
        public NonLinearClickTrackingElement() : base("NonLinearClickTracking")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearClickTracking", this.validationFailureMessage);
            }
        }

        public NonLinearClickTrackingElement(object content) : base("NonLinearClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearClickTracking", this.validationFailureMessage);
            }
        }

        public NonLinearClickTrackingElement(params object[] content) : base("NonLinearClickTracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NonLinearClickTracking", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class NotViewableElement : VElement
    {
        public NotViewableElement() : base("NotViewable")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NotViewable", this.validationFailureMessage);
            }
        }

        public NotViewableElement(object content) : base("NotViewable", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NotViewable", this.validationFailureMessage);
            }
        }

        public NotViewableElement(params object[] content) : base("NotViewable", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("NotViewable", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class PricingElement : VElement
    {
        public PricingElement() : base("Pricing")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Pricing", this.validationFailureMessage);
            }
        }

        public PricingElement(object content) : base("Pricing", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Pricing", this.validationFailureMessage);
            }
        }

        public PricingElement(params object[] content) : base("Pricing", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Pricing", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class StaticResourceElement : VElement
    {
        public StaticResourceElement() : base("StaticResource")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("StaticResource", this.validationFailureMessage);
            }
        }

        public StaticResourceElement(object content) : base("StaticResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("StaticResource", this.validationFailureMessage);
            }
        }

        public StaticResourceElement(params object[] content) : base("StaticResource", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("StaticResource", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class SurveyElement : VElement
    {
        public SurveyElement() : base("Survey")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Survey", this.validationFailureMessage);
            }
        }

        public SurveyElement(object content) : base("Survey", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Survey", this.validationFailureMessage);
            }
        }

        public SurveyElement(params object[] content) : base("Survey", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Survey", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class TrackingElement : VElement
    {
        public TrackingElement() : base("Tracking")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Tracking", this.validationFailureMessage);
            }
        }

        public TrackingElement(object content) : base("Tracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Tracking", this.validationFailureMessage);
            }
        }

        public TrackingElement(params object[] content) : base("Tracking", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Tracking", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class TrackingEventsElement : VElement
    {
        public TrackingEventsElement() : base("TrackingEvents")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("TrackingEvents", this.validationFailureMessage);
            }
        }

        public TrackingEventsElement(object content) : base("TrackingEvents", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("TrackingEvents", this.validationFailureMessage);
            }
        }

        public TrackingEventsElement(params object[] content) : base("TrackingEvents", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("TrackingEvents", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class UniversalAdIdElement : VElement
    {
        public UniversalAdIdElement() : base("UniversalAdId")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("UniversalAdId", this.validationFailureMessage);
            }
        }

        public UniversalAdIdElement(object content) : base("UniversalAdId", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("UniversalAdId", this.validationFailureMessage);
            }
        }

        public UniversalAdIdElement(params object[] content) : base("UniversalAdId", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("UniversalAdId", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class VastElement : VElement
    {
        public VastElement() : base("VAST")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VAST", this.validationFailureMessage);
            }
        }

        public VastElement(object content) : base("VAST", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VAST", this.validationFailureMessage);
            }
        }

        public VastElement(params object[] content) : base("VAST", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VAST", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class VastAdTagUriElement : VElement
    {
        public VastAdTagUriElement() : base("VASTAdTagURI")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VASTAdTagURI", this.validationFailureMessage);
            }
        }

        public VastAdTagUriElement(object content) : base("VASTAdTagURI", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VASTAdTagURI", this.validationFailureMessage);
            }
        }

        public VastAdTagUriElement(params object[] content) : base("VASTAdTagURI", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VASTAdTagURI", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class VerificationElement : VElement
    {
        public VerificationElement() : base("Verification")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Verification", this.validationFailureMessage);
            }
        }

        public VerificationElement(object content) : base("Verification", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Verification", this.validationFailureMessage);
            }
        }

        public VerificationElement(params object[] content) : base("Verification", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Verification", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class VerificationParametersElement : VElement
    {
        public VerificationParametersElement() : base("VerificationParameters")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VerificationParameters", this.validationFailureMessage);
            }
        }

        public VerificationParametersElement(object content) : base("VerificationParameters", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VerificationParameters", this.validationFailureMessage);
            }
        }

        public VerificationParametersElement(params object[] content) : base("VerificationParameters", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VerificationParameters", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class VideoClicksElement : VElement
    {
        public VideoClicksElement() : base("VideoClicks")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VideoClicks", this.validationFailureMessage);
            }
        }

        public VideoClicksElement(object content) : base("VideoClicks", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VideoClicks", this.validationFailureMessage);
            }
        }

        public VideoClicksElement(params object[] content) : base("VideoClicks", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("VideoClicks", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ViewableElement : VElement
    {
        public ViewableElement() : base("Viewable")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Viewable", this.validationFailureMessage);
            }
        }

        public ViewableElement(object content) : base("Viewable", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Viewable", this.validationFailureMessage);
            }
        }

        public ViewableElement(params object[] content) : base("Viewable", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Viewable", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ViewableImpressionElement : VElement
    {
        public ViewableImpressionElement() : base("ViewableImpression")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ViewableImpression", this.validationFailureMessage);
            }
        }

        public ViewableImpressionElement(object content) : base("ViewableImpression", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ViewableImpression", this.validationFailureMessage);
            }
        }

        public ViewableImpressionElement(params object[] content) : base("ViewableImpression", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ViewableImpression", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class ViewUndeterminedElement : VElement
    {
        public ViewUndeterminedElement() : base("ViewUndetermined")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ViewUndetermined", this.validationFailureMessage);
            }
        }

        public ViewUndeterminedElement(object content) : base("ViewUndetermined", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ViewUndetermined", this.validationFailureMessage);
            }
        }

        public ViewUndeterminedElement(params object[] content) : base("ViewUndetermined", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("ViewUndetermined", this.validationFailureMessage);
            }
        }
    }

    public sealed partial class WrapperElement : VElement
    {
        public WrapperElement() : base("Wrapper")
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Wrapper", this.validationFailureMessage);
            }
        }

        public WrapperElement(object content) : base("Wrapper", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Wrapper", this.validationFailureMessage);
            }
        }

        public WrapperElement(params object[] content) : base("Wrapper", content)
        {
            if (!this.Validate())
            {
                throw new InvalidVastElementException("Wrapper", this.validationFailureMessage);
            }
        }
    }
}